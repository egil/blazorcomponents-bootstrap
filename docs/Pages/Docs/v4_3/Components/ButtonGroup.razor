@page  "/docs/4.3/components/button-group"
@using Egil.RazorComponents.Bootstrap.Documentation.Pages.Docs.v4_3.Components.Examples.ButtonGroup

<DocHead Title="Button group" RelatedBootstrapDoc="4.3/components/button-group/">
    Group a series of buttons together on a single line with the <code>Group</code> component, and enable advanced toggle scenarios.
</DocHead>

<h2 id="basic-example">Basic example</h2>
<p>Wrap a series of buttons in a <code>Group</code> component to group them together. </p>

<Example File=@typeof(SimpleGroup) />

<p>Apply the Color parameter once for all buttons in a group on the group component, or set it directly on the individual buttons as needed.</p>

<Example File=@typeof(ColorGroup) />

<AssistiveTechCallout Heading="Provide a label">
    <p>In order for assistive technologies (such as screen readers) to convey that a series of buttons is grouped, an appropriate <code class="highlighter-rouge">role</code> attribute needs to be provided. <strong>This is done automatically by the <code>Group</code> component.</strong> For button groups, this would be <code class="highlighter-rouge">role="group"</code>, while toolbars should have a <code class="highlighter-rouge">role="toolbar"</code>.</p>

    <p>In addition, groups and toolbars should be given an explicit label, as most assistive technologies will otherwise not announce them, despite the presence of the correct role attribute. In the examples provided here, we use <code class="highlighter-rouge">aria-label</code>, but alternatives such as <code class="highlighter-rouge">aria-labelledby</code> can also be used.</p>
</AssistiveTechCallout>

<h2 id="sizing">Sizing</h2>

<p>Instead of applying button sizing to every button in a group, just add <code class="highlighter-rouge">Size="*"</code> to each <code class="highlighter-rouge">Group</code> component, including each one when nesting multiple groups.</p>

<Example File=@typeof(Sizing) />

<h2 id="mix-dropdowns-and-buttons">Mix dropdowns and buttons</h2>

<p><a href="/docs/4.3/components/dropdowns">Dropdown</a> components/menus can be placed inside a button group by including the dropdown in the group.</p>

<Example File=@typeof(DropdownMixedIn) />

<h2 id="vertical-variation">Vertical variation</h2>

<p>Make a set of buttons appear vertically stacked rather than horizontally. <strong>Split button dropdowns are not supported here.</strong></p>

<Example File=@typeof(Orientation) />

<h2 id="button-toolbar">Button toolbar</h2>

<p>Combine sets of button groups into button toolbars for more complex components. Use margin/padding utilities as needed to space out groups, buttons, and more.</p>
<p>If you set <code>Color</code> and <code>Size</code> on the toolbar, the groups and buttons inside it will inherit those values, unless they are overwritten.</p>

<Example File=@typeof(ToolbarGroup) />
<Example File=@typeof(ToolbarGroup2) />

<p>Feel free to mix input groups with button groups in your toolbars. Similar to the example above, you’ll likely need some utilities though to space things properly.</p>

<Example File=@typeof(ToolbarAdvanced) />